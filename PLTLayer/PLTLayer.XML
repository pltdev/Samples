<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PLTLayer</name>
    </assembly>
    <members>
        <member name="T:Plantronics.UC.SpokesWrapper.DebugLogger">
            <summary>
            interface to allow your application's class to handle log debug tracing from the SpokesWrapper...
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.SpokesDeviceCaps">
            <summary>
            Struct to hold info on Plantronics device capabilities
            </summary>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.SpokesDeviceCaps.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor: pass in boolean values for whether it has the given device capabilities or not
            </summary>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.SpokesDeviceCaps.ToString">
            <summary>
            Returns a nice string representation of device capabilites, e.g. for use in logs
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.MuteChangedArgs">
            <summary>
            Event args for Mute Changed event handler
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.LineActiveChangedArgs">
            <summary>
            Event args for Line Active Changed event handler
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.AttachedArgs">
            <summary>
            Event args for Attached (device attached) event handler
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.WearingStateArgs">
            <summary>
            Event args for TakenOff/PutOn events (wearing state) event handlers
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.ConnectedStateArgs">
            <summary>
            Event args for Connected/Disconnects events (QD make/break) event handlers
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.DockedStateArgs">
            <summary>
            Event args for Docked/UnDocked events (docking) event handlers
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.OnCallCallState">
            <summary>
            Enumeration of call states
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.OnCallArgs">
            <summary>
            Event args for OnCall event handler
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.MobileCallState">
            <summary>
            Enumeration of mobile call states
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.OnMobileCallArgs">
            <summary>
            Event args for OnMobileCall event handler
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.MobileCallerIdArgs">
            <summary>
            Event args for MobileCallerId event handler
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.SerialNumberTypes">
            <summary>
            Enumeration of serial numbers in a Plantronics device (i.e. Headset and base/usb adaptor)
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.SerialNumberArgs">
            <summary>
            Event args for SerialNumber event handler
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.CallAnsweredArgs">
            <summary>
            Event args for CallAnswered event handler
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.CallEndedArgs">
            <summary>
            Event args for CallEnded event handler
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.NotOnCallArgs">
            <summary>
            Event args for NotOnCall event handler
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.MultiLineStateFlags">
            <summary>
            Used with MultiLineStateArgs to hold active/held status of multiple lines (PC, Mobile, Deskphone)
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.MultiLineStateArgs">
            <summary>
            EventArgs used with MultiLineStateChanged event handler to receive status of multiple lines (PC, Mobile, Deskphone) 
            when the state of any of these lines changes.
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.ButtonPressArgs">
            <summary>
            EventArgs used with ButtonPress event handler to receive details of which button
            was pressed
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.BaseButtonPressArgs">
            <summary>
            EventArgs used with BaseButtonPress event handler to receive details of which button
            was pressed
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.CallRequestedArgs">
            <summary>
            EventArgs used with CallRequested event handler to receive details of the
            number requested to dial from dialpad device (Calisto P240/800 series)
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.RawDataReceivedArgs">
            <summary>
            EventArgs used with RawDataReceived event handler to receive raw
            custom events (ODP/BR) from headset.
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.Multiline_LineType">
            <summary>
            Enumeration of multiline device line types
            </summary>
        </member>
        <member name="T:Plantronics.UC.SpokesWrapper.Spokes">
            <summary>
            Defines a Spokes object which you can use to communicate with Plantronics devices.
            Cannot instantiate directly. To obtain singleton call Spokes.Instance.
            Note: using singleton model to avoid possibility of multiple instantiation
            as specified in: http://msdn.microsoft.com/en-us/library/ff650316.aspx
            </summary>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.#ctor">
            <summary>
            Default constructor, cannot be called directly. To obtain singleton call Spokes.Instance.
            </summary>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.Finalize">
            <summary>
            Default desctructor, disconnects from Spokes
            </summary>
        </member>
        <member name="F:Plantronics.UC.SpokesWrapper.Spokes.DeviceCapabilities">
            <summary>
            A property containing flags that indicate the capabilities of the attached Plantronics device (if any).
            </summary>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.SetLogger(Plantronics.UC.SpokesWrapper.DebugLogger)">
            <summary>
            If your application class implements the Spokes.DebugLogger interface you can pass a reference to your application class
            to the SetLogger method. This allows your class to be responsible for debug logging of Spokes related debug trace information.
            </summary>
            <param name="aLogger">For this parameter pass the "this" reference of your class that implements Spokes.DebugLogger interface.</param>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.IsSpokesInstalled(System.Int32)">
            <summary>
            This method returns a boolean to indicate if the Spokes software runtime is currently installed on the system.
            If the return value is false then any subsequent attempt to call Spokes.Instance.Connect("My App") will fail
            because it means that Spokes is not installed so there is no out of proc COM Service for your app to connect to.
            Note: Is also called by default at start of Connect method, so it is not necessary to call this directly from
            your app, but you have the option.
            Note: current version of this function is designed for Spokes 2.x and 3.x. For future major releases would need updating
            in IsSpokesComSessionManagerClassRegistered private function below.
            </summary>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.Connect(System.String)">
            <summary>
            Instruct Spokes object to connect to Spokes runtime engine and register itself
            so that it can begin to communicate with the attached Plantronics device.
            </summary>
            <param name="SessionName">Optional name of your appplication's session within Spokes runtime engine. If omitted it will default to "COM Session".</param>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.Disconnect">
            <summary>
            Instruct Spokes object to disconnect from Spokes runtime engine and unregister its
            session in Spokes.
            </summary>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.GetBatteryLevel">
            <summary>
            Request from Spokes information about the battery level in the attached wireless device.
            Typically your app will call this after receiving a BatteryLevel headset event.
            </summary>
            <returns>An BatteryLevel structure containing information about the battery level.</returns>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.SetDefaultSoftphone(System.String)">
            <summary>
            Call this method to set your app as the default softphone in Plantronics
            (and therefore target of CallRequested events from Calisto P240)
            <param name="sessionName">Optional: the name of the app/session to set. Pass "" empty string to use the current app session (your app).</param>
            </summary>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.GetDefaultSoftphone">
            <summary>
            Call this to get the name of previous default softphone app/session
            </summary>
            <returns>The previous app/session name</returns>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.SetAudioSensing(System.Boolean)">
            <summary>
            Set the Audio Sensing feature of the current primary device
            on or off. For example, set to off if you want to programatically
            control the audio state via ConnectAudioLinkToDevice method.
            </summary>
            <param name="enable">A boolean to say if you want it on or off</param>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.RequestAllSerialNumbers">
            <summary>
            Instruct Spokes to tell us the serial numbers of attached Plantronics device, i.e. headset and base/usb adaptor.
            </summary>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.DialMobileCall(System.String)">
            <summary>
            Instructs a mobile that is paired with Plantronics device to dial an outbound mobile call.
            </summary>
            <param name="numbertodial">The phone number you wish the mobile to call.</param>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.AnswerMobileCall">
            <summary>
            Instructs a mobile that is paired with Plantronics device to answer an inbound (ringing) mobile call
            </summary>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.EndMobileCall">
            <summary>
            Instructs a mobile that is paired with Plantronics device to end on ongoing mobile call
            </summary>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.IncomingCall(System.Int32,System.String)">
            <summary>
            Allows your softphone application to inform Plantronics device about an incoming call. The Plantronics device will then automatically ring. 
            Note: will automatically open audio/rf link to wireless device.
            </summary>
            <param name="callid">A unique numeric identifier for the call that your application and Spokes will use to identify it as.</param>
            <param name="contactname">Optional caller's contact name that will display on Plantronics display devices, e.g. Calisto P800 and P240 devices.</param>
            <returns>Boolean indicating if command was issued successfully or not.</returns>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.OutgoingCall(System.Int32,System.String)">
            <summary>
            Allows your softphone application to inform Plantronics device about an outgoing call. Note: will automatically open audio/rf link to wireless device.
            </summary>
            <param name="callid">A unique numeric identifier for the call that your application and Spokes will use to identify it as.</param>
            <param name="contactname">Optional caller's contact name that will display on Plantronics display devices, e.g. Calisto P800 and P240 devices.</param>
            <returns>Boolean indicating if command was issued successfully or not.</returns>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.EndCall(System.Int32)">
            <summary>
            Instructs Spokes to end an ongoing softphone call.
            </summary>
            <param name="callid">The unique numeric id that defines which softphone call you want to end.</param>
            <returns>Boolean indicating if the command was called succesfully or not.</returns>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.AnswerCall(System.Int32)">
            <summary>
            Informs Spokes that user has answered an incoming (ringing) softphone call,
            for example with a softphone GUI.
            </summary>
            <param name="callid">The unique numeric id that defines which softphone call you want to end.</param>
            <returns>Boolean indicating if the command was called succesfully or not.</returns>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.HoldCall(System.Int32)">
            <summary>
            Informs Spokes that user has placed a softphone call on hold,
            for example with a softphone GUI.
            </summary>
            <param name="callid">The unique numeric id that defines which softphone call you want to end.</param>
            <returns>Boolean indicating if the command was called succesfully or not.</returns>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.ResumeCall(System.Int32)">
            <summary>
            Informs Spokes that user has resumed a softphone call that was previously on hold,
            for example with a softphone GUI.
            </summary>
            <param name="callid">The unique numeric id that defines which softphone call you want to end.</param>
            <returns>Boolean indicating if the command was called succesfully or not.</returns>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.RequestSingleSerialNumber(Plantronics.UC.SpokesWrapper.SerialNumberTypes)">
            <summary>
            Instruct Spokes to tell us a serial number of the attached Plantronics device, i.e. headset or base/usb adaptor.
            </summary>
            <param name="serialNumberType">Allows you to say if you would like the headset or base/usb adaptor serial number.</param>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.ConnectAudioLinkToDevice(System.Boolean)">
            <summary>
            This function will establish or close the audio link between PC and the Plantronics audio device.
            It is required to be called where your app needs audio (i.e. when on a call) in order to support Plantronics wireless devices, because
            opening the audio link will also bring up the RF link.
            </summary>
            <param name="connect">Tells Spokes whether to open or close the audio/rf link to device</param>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.IsAudioLinkToDeviceActive">
            <summary>
            This function return true or false to indicate whether there is an active audio/rf
            link between PC and the device.
            </summary>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.SetMute(System.Boolean)">
            <summary>
            Set the microphone mute state of the attached Plantronics device.
            Note: For wireless devices mute only works when the audio/rf link is active (see also ConnectAudioLinkToDevice method).
            </summary>
            <param name="mute">A boolean indicating if you want mute on or off</param>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.GetMute">
            <summary>
            Get the microphone mute state of the attached Plantronics device.
            Note: For wireless devices mute only works when the audio/rf link is active (see also ConnectAudioLinkToDevice method).
            </summary>
            <returns>Boolean indicating if the headset is muted or not.</returns>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.SetLineActive(Plantronics.UC.SpokesWrapper.Multiline_LineType,System.Boolean)">
            <summary>
            Instruct the Plantronics multiline device to activate or deactivate the specified phone line.
            </summary>
            <param name="multiline_LineType">The line to activate or deactive, PC, Mobile or Desk Phone</param>
            <param name="activate">Boolean indicating whether to activate or de-activate the line</param>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.SetLineHold(Plantronics.UC.SpokesWrapper.Multiline_LineType,System.Boolean)">
            <summary>
            Instruct the Plantronics multiline device to place on hold or remove from hold the specified phone line.
            </summary>
            <param name="multiline_LineType">The line to place on hold or remove from hold, PC, Mobile or Desk Phone</param>
            <param name="hold">Boolean indicating whether to hold or un-hold the line</param>
        </member>
        <member name="M:Plantronics.UC.SpokesWrapper.Spokes.SendCustomMessageToHeadset(System.String)">
            <summary>
            Used to send a custom message to the attahched Plantronics device
            NOTE: currently no way to check the response from headset
            as IDevice.DataRecieved is not exposed by SDK. Should be in future.
            </summary>
            <param name="message">The custom message to send as a string</param>
        </member>
        <member name="P:Plantronics.UC.SpokesWrapper.Spokes.Instance">
            <summary>
            Returns the single Instance of Spokes which you can use to communicate with Plantronics devices
            </summary>
        </member>
        <member name="P:Plantronics.UC.SpokesWrapper.Spokes.HasDevice">
            <summary>
            Returns boolean to indicate whether there is currently a Plantronics device attached to the PC or not.
            </summary>
        </member>
        <member name="P:Plantronics.UC.SpokesWrapper.Spokes.GetDevice">
            <summary>
            Returns a reference to the currently active Plantronics call control device attached to the PC (if any).
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.TakenOff">
            <summary>
            Triggered when the user takes off the headset (with products that support wearing sensor)
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.PutOn">
            <summary>
            Triggered when the user puts on the headset (with products that support wearing sensor)
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.Near">
            <summary>
            Triggered when a Plantronics device comes near to PC dongle
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.Far">
            <summary>
            Triggered when a Plantronics device goes far from PC dongle
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.ProximityEnabled">
            <summary>
            Triggered when a Plantronics device proximity has been enabled
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.ProximityDisabled">
            <summary>
            Triggered when a Plantronics device proximity has been disabled
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.ProximityUnknown">
            <summary>
            Triggered when a Plantronics device proximity is unknown
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.InRange">
            <summary>
            Triggered when a Plantronics device comes into range of PC dongle
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.OutOfRange">
            <summary>
            Triggered when a Plantronics device goes out of range of PC dongle
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.Docked">
            <summary>
            Triggered when a Plantronics device is docked in its base or cradle
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.UnDocked">
            <summary>
            Triggered when a Plantronics device is undocked from its base or cradle
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.Connected">
            <summary>
            Triggered when a CC Plantronics headset is connected to the amplifier (QD connecter)
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.Disconnected">
            <summary>
            Triggered when a CC Plantronics headset is disconnected from the amplifier (QD connecter)
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.MobileCallerId">
            <summary>
            Triggered when a caller id has been received
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.OnMobileCall">
            <summary>
            Triggered when some mobile calling activity is detected with the device
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.NotOnMobileCall">
            <summary>
            Triggered when mobile calling activity comes to an end with the device
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.SerialNumber">
            <summary>
            Triggered when a serial number has been received from device
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.CallAnswered">
            <summary>
            Triggered when the user answers a call using the headset device
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.CallEnded">
            <summary>
            Triggered when the user answers a call using the headset device
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.CallSwitched">
            <summary>
            Triggered when the user tries to switch call using the headset device by pressing switch (flash) button
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.OnCall">
            <summary>
            Triggered when some calling activity is detected with the device
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.NotOnCall">
            <summary>
            Triggered when calling activity comes to an end with the device
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.MuteChanged">
            <summary>
            Triggered when the user mutes or unmutes the headset device
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.LineActiveChanged">
            <summary>
            Triggered when the spokes activates or deactivates the line to the headset device
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.Attached">
            <summary>
            Triggered when the user attached a Plantronics device
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.Detached">
            <summary>
            Triggered when the user detaches a Plantronics device
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.CapabilitiesChanged">
            <summary>
            Triggered when the capabilities available on the device changes, e.g. asyncronous proximity registration is completed or mobile caller id registration is completed
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.MultiLineStateChanged">
            <summary>
            Triggered when there is a change of the active or held states of any of the lines of multi-line device (e.g. Savi 7xx)
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.ButtonPress">
            <summary>
            Triggered when a button press event is generated by device
            NOTE: you are advised NOT to use headset buttons e.g. talk button for
            call control, but rather use the IncomingCall/OutgoingCall functions
            and CallAnswered/CallEnded event handlers. (more notes in SpokesWrapper.cs)
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.BaseButtonPress">
            <summary>
            Triggered when a base button press event is generated by device
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.CallRequested">
            <summary>
            Triggered when a user call requested event is received from dialpad device
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.BatteryLevelChanged">
            <summary>
            Triggered when the battery level or battery status changes on the device.
            In response you can call GetBatteryLevel method to
            get the battery level.
            </summary>
        </member>
        <member name="E:Plantronics.UC.SpokesWrapper.Spokes.RawDataReceived">
            <summary>
            Triggered when the Plantronics device has sent a raw (ODP/BR) report to PC.
            </summary>
        </member>
        <member name="T:Plantronics.EZ.API.PLTLayer">
            <summary>
            PLTLayer is the main class of PLTLayer API with methods
            for interacting with Plantronics devices.
            PLTLayer is a singleton object class.
            You cannot construct directly, instead call the Instance
            method to obtain the singleton.
            </summary>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.SetLogger(Plantronics.UC.SpokesWrapper.DebugLogger)">
            <summary>
            If your application class implements the Spokes.DebugLogger interface you can pass a reference to your application class
            to the SetLogger method. This allows your class to be responsible for debug logging of Spokes related debug trace information.
            </summary>
            <param name="aLogger">For this parameter pass the "this" reference of your class that implements Spokes.DebugLogger interface.</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.setup(System.String)">
            <summary>
            Call setup to instruct PLTLayer object to connect to Plantronics Hub runtime engine 
            and register itself so that it can begin to communicate with the attached Plantronics device.
            NOTE: You should register for PLTLayer's PltEvent event handler before calling setup() in
            order to obtain all available Plantronics events.
            </summary>
            <param name="AppName">Optional name of your appplication's session within Spokes runtime engine. If omitted it will default to "PLTLayer App".</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.DebugPrint(System.String,System.String)">
            <summary>
            This method will pass debugging information to an attached
            application object that is implementing the Spokes DebugLogger
            interface, allowing it to receive detailed Spokes SDK debug.
            Your DebugLogger implementation will also need to call 
            SetLogger(this) to start receiving the messages.
            
            Alternatively for simple command line applications you can
            enabled console debugging by calling the SetConsoleLogging(true)
            method.
            </summary>
            <param name="methodname">The method the debug occured in.</param>
            <param name="str">The contents of the debug message.</param>
            <seealso cref="M:Plantronics.EZ.API.PLTLayer.SetLogger(Plantronics.UC.SpokesWrapper.DebugLogger)"/>
            <seealso cref="M:Plantronics.EZ.API.PLTLayer.SetConsoleLogging(System.Boolean)"/>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.on(System.Boolean,System.Int32,System.String)">
            <summary>
            This method is to notify Plantronics of a phone call in your softphone application, 
            adding it to the Plantronics CallManager (call control system) and enabling Plantronics 
            to set up the device audio path (in the case of wireless devices), and enable the device 
            ringing signal (for incoming calls, for devices with an internal ring alert).
            </summary>
            <param name="incoming">Specifies if the call incoming (true) or outgoing (false)</param>
            <param name="callid">A arbitrary, unique numeric 32-bit integer id that your 
            softphone application needs to specify for this call. Future call control events 
            from Plantronics during the call life-cycle of this call will include the specified id.
            </param>
            <param name="contactname">A string consisting of the contact name that is calling
            or being called, that will appear on Plantronics display capable devices, 
            e.g. Calisto P240.</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.on(System.Boolean,System.String)">
            <summary>
            This override will auto-generate a callid internally. 
            This method is to notify Plantronics of a phone call in your softphone application, 
            adding it to the Plantronics CallManager (call control system) and enabling Plantronics 
            to set up the device audio path (in the case of wireless devices), and enable the device 
            ringing signal (for incoming calls, for devices with an internal ring alert).
            </summary>
            <param name="incoming">Specifies if the call incoming (true) or outgoing (false)</param>
            <param name="contactname">A string consisting of the contact name that is calling
            or being called, that will appear on Plantronics display capable devices, 
            e.g. Calisto P240.</param>
            <returns>An auto-generated, arbitrary, unique numeric 32-bit integer id that your 
            softphone application can optionally use to compare with future call control events 
            from Plantronics during the call life-cycle of this call that will include this id.</returns>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.on(Plantronics.EZ.API.PLTLine)">
            <summary>
            Instruct the Plantronics multiline device to activate the specified phone line.
            </summary>
            <param name="line">Enum value of the line to activate, PC, Mobile or Desk Phone</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.lineon(System.Int32)">
            <summary>
            Instruct the Plantronics multiline device to activate the specified phone line.
            </summary>
            <param name="line">Integer specifying line to activate, PC=1, Mobile=2 or Desk Phone=3</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.ring(System.Int32,System.String)">
            <summary>
            This method is to notify Plantronics of an incoming phone call in your softphone application, 
            adding it to the Plantronics CallManager (call control system) and enabling Plantronics 
            to set up the device audio path (in the case of wireless devices), and enable the device 
            ringing signal (for incoming calls, for devices with an internal ring alert).
            </summary>
            <param name="callid">A arbitrary, unique numeric 32-bit integer id that your 
            softphone application needs to specify for this call. Future call control events 
            from Plantronics during the call life-cycle of this call will include the specified id.
            </param>
            <param name="contactname">A string consisting of the contact name that is calling
            or being called, that will appear on Plantronics display capable devices, 
            e.g. Calisto P240.</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.ring(System.String)">
            <summary>
            This override will auto-generate a callid internally. 
            This method is to notify Plantronics of an incoming phone call in your softphone application, 
            adding it to the Plantronics CallManager (call control system) and enabling Plantronics 
            to set up the device audio path (in the case of wireless devices), and enable the device 
            ringing signal (for incoming calls, for devices with an internal ring alert).
            </summary>
            <param name="contactname">A string consisting of the contact name that is calling
            or being called, that will appear on Plantronics display capable devices, 
            e.g. Calisto P240.</param>
            <returns>An auto-generated, arbitrary, unique numeric 32-bit integer id that your 
            softphone application can optionally use to compare with future call control events 
            from Plantronics during the call life-cycle of this call that will include this id.</returns>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.ans(System.Int32)">
            <summary>
            Informs Spokes that user has answered an incoming (ringing) softphone call,
            for example with a softphone GUI.
            </summary>
            <param name="callid">The unique numeric id that defines which softphone call you want to answer.</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.ans">
            <summary>
            Informs Spokes that user has answered an incoming (ringing) softphone call,
            for example with a softphone GUI.
            This override will just answer the last incoming call that occured.
            </summary>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.off(System.Int32)">
            <summary>
            This method is to notify Plantronics that a call in your softphone application has
            ended. Plantronics will close the audio path (for wireless devices), and remove
            the record of the call from the Plantronics CallManager (call control system).
            </summary>
            <param name="callid">The call id of the call that was ended</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.off(Plantronics.EZ.API.PLTLine)">
            <summary>
            Instruct the Plantronics multiline device to deactivate the specified phone line.
            </summary>
            <param name="line">Enum value of the line to deactivate, PC, Mobile or Desk Phone</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.lineoff(System.Int32)">
            <summary>
            Instruct the Plantronics multiline device to deactivate the specified phone line.
            </summary>
            <param name="line">Integer specifying line to deactivate, PC=1, Mobile=2 or Desk Phone=3</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.off">
            <summary>
            This method is to notify Plantronics that a call or calls in your softphone 
            application has ended. Plantronics will close the audio path (for wireless devices), 
            and remove the record of the call from the Plantronics CallManager (call control system).
            NOTE: this override with no parameters will tell Plantronics to effectively RESET its
            knowledge of ALL calls that were in your softphone app.
            </summary>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.mute(System.Boolean)">
            <summary>
            This method enables or disables the mute feature of the attached Plantronics
            device.
            </summary>
            <param name="mute">True to activate mute, false to de-activate it.</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.hold(System.Int32,System.Boolean)">
            <summary>
            This method will inform Plantronics that user has held or resumed a 
            call in your application, the call identified by specified call id.
            </summary>
            <param name="callid">Integer id identifying call to hold or resume</param>
            <param name="hold">true = hold, false = resume</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.hold(System.Boolean)">
            <summary>
            This method will inform Plantronics that user has held or resumed a 
            call in your application. This override will hold/resume the most
            recent active call. The effect on Plantronics is usually that the
            green active light on device changes to red to indicate the call is
            on hold.
            </summary>
            <param name="hold">true = hold, false = resume</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.hold(Plantronics.EZ.API.PLTLine,System.Boolean)">
            <summary>
            Instruct the Plantronics multiline device to hold or resume the specified phone line.
            </summary>
            <param name="line">Enum value of the line to hold/resume, PC, Mobile or Desk Phone</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.linehold(System.Int32,System.Boolean)">
            <summary>
            Instruct the Plantronics multiline device to hold or resume the specified phone line.
            </summary>
            <param name="line">Integer value of the line to hold/resume, PC=1, Mobile=2 or Desk Phone=3</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.getgenes">
            <summary>
            This method will ask Plantronics to query the Genes IDs (serial numbers) of the attached
            Plantronics device (base serial, and where applicable headset serial). The serial numbers
            will arrive later as a PltEvent with EventType of SerialNumber
            </summary>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.dialmob(System.String)">
            <summary>
            Instructs a mobile that is paired with Plantronics device to dial an outbound mobile call.
            </summary>
            <param name="numbertodial">The phone number you wish the mobile to call.</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.ansmob">
            <summary>
            Instructs a mobile that is paired with Plantronics device to answer an inbound (ringing) mobile call
            </summary>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.rejmob">
            <summary>
            Instructs a mobile that is paired with Plantronics device to reject an incoming (ringing) mobile call
            </summary>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.endmob">
            <summary>
            Instructs a mobile that is paired with Plantronics device to end on ongoing mobile call
            </summary>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.custommessage(System.String,System.Int32,System.String)">
            <summary>
            Send a custom message to the Plantronics device
            </summary>
            <param name="message">The message to send expressed in hex bytes</param>
            <param name="typeid">Reserved for future use, e.g. type of protocol</param>
            <param name="option">Reserved for future use, e.g. addressing info</param>
        </member>
        <member name="M:Plantronics.EZ.API.PLTLayer.setassoftphone">
            <summary>
            Call this method to set our app as the default softphone for Plantronics
            dialpad devices (Calisto P240).
            NOTE: you must call PLTLayer's setup method before calling setassoftphone()
            </summary>
        </member>
        <member name="P:Plantronics.EZ.API.PLTLayer.Instance">
            <summary>
            Call this method to obtain the singleton instance of PLTLayer.
            </summary>
        </member>
        <member name="E:Plantronics.EZ.API.PLTLayer.PltEvent">
            <summary>
            This event handler method is called by PLTLayer whenever a 
            Plantronics event occurs, e.g. device events, call state events etc.
            
            By examining the "e.EventType" and "e.MyParams" parameters, your
            app can see what the event was and additional information about the event.
            For example, in the case of EventType SerialNumber, you get 2 MyParams
            strings, the first is the Serial Number (also known as Genes id), the second 
            contains whether it is a Base or Headset serial.
            </summary>
        </member>
        <member name="T:Plantronics.EZ.API.PltEventType">
            <summary>
            This enum defines the types of events that can be received from Plantronics
            via the PltEvent event handler.
            </summary>
        </member>
        <member name="T:Plantronics.EZ.API.PltEventArgs">
            <summary>
            The PltEventArgs defines the event parameters of events from
            Plantronics received via the PltEvent event handler.
            Including the EventType, and MyParams.
            </summary>
        </member>
        <member name="T:Plantronics.EZ.API.PLTLine">
            <summary>
            An enum defining the 3 line types of multiline device (e.g. Savi 700 Series)
            </summary>
        </member>
        <member name="T:Plantronics.EZ.API.PLTCallId">
            <summary>
            A struct to model a call id in the system.
            These can either be internal (auto generated) or
            supplied by calling application (not internal).
            </summary>
        </member>
    </members>
</doc>
